.popup {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100vh;
	background-color: rgba($color-black, 0.8);
	z-index: 9999;
	//Remember, setting opacity to 0, content is still there just invisible, so you can't click anything under it.  So we set visibility to hidden.  Don't use Display none becasue we can't animate display
	opacity: 0;
	visibility: hidden;

	transition: all 0.3s;

	&__content {
		@include absCenter;
		width: 75%;
		background-color: $color-white;
		box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
		border-radius: 3px;
		display: table;
		//images overlapping border and 'removing' border radius, so we set to overflow hidden
		overflow: hidden;
		opacity: 0;
		// absCenter includes a transform, can only have 1 transform per element.  The lowest transform overrides.  So we repeat the previous one in this as well.
		// this is for the zoom in effect
		transform: translate(-50%, -50%) scale(0.2);
		//added a little delay so the black overlay appears first then the content 'zooms' in
		transition: all 0.4s 0.2s;
	}

	&__left {
		width: 33.33333%;
		display: table-cell;
		@include respond(tab-port) {
			width: 100%;
			float: left;

			overflow: hidden;
		}
	}

	&__right {
		width: 66.66666%;
		display: table-cell;
		//only available on table cells
		vertical-align: middle;
		padding: 3rem 5rem;
		@include respond(tab-port) {
			display: block;
			background-size: cover;
			width: 100%;
			text-align: center;
		}
	}

	&__img {
		display: block;
		width: 100%;
		@include respond(tab-port) {
			width: 50%;
			float: left;
			height: 20rem;
		}
		@include respond(phone) {
			display: none;
		}
	}

	&__text {
		font-size: 1.4rem;
		margin-bottom: 4rem;

		-moz-column-count: 2;
		-ms-column-gap: 4rem;
		-webkit-column-rule: 1px solid $color-grey-light-2;

		column-count: 2;
		column-gap: 4rem;
		column-rule: 1px solid $color-grey-light-2;

		-moz-hyphens: auto;
		-ms-hyphens: auto;
		-webkit-hyphens: auto;
		hyphens: auto;

		@include respond(phone) {
			column-count: 1;
		}
	}

	//basically, when this element becomes the target.  meaning an a tag's href is this elements id.
	&:target {
		opacity: 1;
		visibility: visible;
	}

	&:target &__content {
		opacity: 1;
		transform: translate(-50%, -50%) scale(1);
	}

	&__close {
		&:link,
		&:visited {
			color: $color-grey-dark;
			position: absolute;
			top: 2.5rem;
			right: 2.5rem;
			font-size: 3rem;
			text-decoration: none;
			display: inline-block;
		}

		&:hover {
			color: $color-primary;
		}
	}
}
